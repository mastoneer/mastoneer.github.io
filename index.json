
[{"content":"","date":"2024 November 3","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"写在这的笔记是为了自己以后复习用的，也希望能帮助到其他人。\nQt Server 多线程编程 #\r多线程编程\n代码：\n//首先继承QtcpServer类,实现incomingConnection(qintptr socketDescriptor)函数 //有客户端连接会触发此函数 void MyTcpServer::incomingConnection(qintptr socketDescriptor){ //创建线程 QThread *subThread =new QThread; //创建客户端对象 clienthandler *myClient=new clienthandler(socketDescriptor); //将客户端对象移动到线程中 myClient-\u0026gt;moveToThread(subThread); //启动线程 subThread-\u0026gt;start(); connect(this,\u0026amp;MyTcpServer::signal_to_thread,myClient,\u0026amp;clienthandler::working); emit signal_to_thread(); } } //在客户端对象中实现working()函数 void clienthandler::working(){ //实现客户端的功能 socket =new QTcpSocket(); socket-\u0026gt;setSocketDescriptor(socketfd); connect(socket,\u0026amp;QTcpSocket::readyRead,this,\u0026amp;clienthandler::recv_info) } //在客户端对象中实现recv_info()函数 void clienthandler::recv_info(){ //实现客户端的功能 QByteArray data=socket-\u0026gt;readAll(); //通过信号发送数据到主线程 emit signal_to_main(data); } //在clienthandler中实现signal_to_main()函数 //在主线程中实现recv_data()函数 void MainWindow::recv_data(QByteArray data){ //实现主线程的功能 ui-\u0026gt;textEdit-\u0026gt;append(data); } //创建tcp服务器对象 server=new MyTcpServer(this); //启动服务器 server-\u0026gt;listen(QHostAddress::Any,8888); ","date":"2024 November 3","externalUrl":null,"permalink":"/posts/qt-server-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/","section":"Posts","summary":"","title":"Qt Server 多线程编程","type":"posts"},{"content":"","date":"2024 November 3","externalUrl":null,"permalink":"/","section":"坚果のBlog","summary":"","title":"坚果のBlog","type":"page"},{"content":"","date":"2024 November 1","externalUrl":null,"permalink":"/blogs/","section":"Blogs","summary":"","title":"Blogs","type":"blogs"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]